#!/usr/bin/env python

import rospy
from geometry_msgs.msg import Pose
import time
from math import sin, cos, pi
import tf

def talker():
    pub = rospy.Publisher('geometry_pose', Pose, queue_size=10)
    rospy.init_node('talker', anonymous=True)
    listener = tf.TransformListener()
    rate = rospy.Rate(0.5) # 10hz

    while not rospy.is_shutdown():
        msg = Pose()
        
        try:
            (trans,rot) = listener.lookupTransform('/dobot1/base_link', '/dobot1/link_grip', rospy.Time(0))         
            msg.position.x = (trans[0] * 1000) + 10
            msg.position.y = trans[1] * 1000
            msg.position.z = (trans[2] * 1000) - 45

            msg.orientation.x = rot[0] * -135

            pub.publish(msg)
            time.sleep(0.025)

        except (tf.LookupException, tf.ConnectivityException, tf.ExtrapolationException):
            None

if __name__ == '__main__':
    try:
        talker()
    except rospy.ROSInterruptException:
        pass
